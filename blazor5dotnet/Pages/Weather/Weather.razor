@page "/weather"
@using blazor5dotnet.Models
@using blazor5dotnet.Service
@using static System.Net.WebRequestMethods
@inject HttpClient Http
@inject IWeatherForecastService service

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div style="height: 400px;overflow-y: scroll;">
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th aria-label="Temperature in Celsius">Temp. (C)</th>
                    <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                <Virtualize Items="@forecasts" Context="forecast">
                    <!-- <DataGridRow forecast="forecast" ></DataGridRow> -->
                    @RenderGridRow(forecast)
                </Virtualize>
            </tbody>
        </table>
    </div>
}

@code
{
    RenderFragment<WeatherForecast> RenderGridRow = forecast => __builder =>
    {
        <tr>
            <td>@forecast.Date.ToShortDateString()</td>
            <td>@forecast.TemperatureC</td>
            <td>@forecast.TemperatureF</td>
            <td>@forecast.Summary</td>
        </tr>
    };
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await service.Get();
    }


}
